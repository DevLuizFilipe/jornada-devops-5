apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-news
spec:
  replicas: 2
  selector:
    matchLabels:
      app: kube-news
  template:
    metadata:
      labels:
        app: kube-news
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: kube-news-container
          image: luizfilipesm/kube-news:{{TAG}}
          ports:
            - containerPort: 8080
          envFrom:
            - secretRef:
                name: kube-news-secret
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres-container
          image: postgres:15
          ports:
            - containerPort: 5432
          envFrom:
            - secretRef:
                name: postgres-secret
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data #Antes deve-se criar o volume e setar a permiss√£o correta
      volumes:
        - name: postgres-storage
          emptyDir: {}
